name: Release

on:
  push:
    tags:
    - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:        
  releases:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build with Maven
      run: mvn clean package

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: ${{ github.ref }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Get Maven app version
      run: |
        mvn help:evaluate -Dexpression=project.version | grep -e '^[^\[]'
        echo "app_version=$(mvn help:evaluate -Dexpression=project.version | grep -e '^[^\[]')" >> $GITHUB_ENV

    - name: Upload Binary linux-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/spring-boot-api-${{ env.app_version }}.jar
        asset_name: spring-boot-api-${{ env.app_version }}.jar
        asset_content_type: application/zip

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Build Jar
        run: mvn --batch-mode --update-snapshots clean package

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    createPullRequest:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: main
        run: |
          cp Deployments/drive-in/overlays/dev/image-template.yaml Deployments/drive-in/overlays/dev/image.yaml
          sed -i -e 's+latest+$app_version+g' Deployments/drive-in/overlays/dev/image.yaml
          git add -A
          git commit -m "Updating image reference in dev/image.yaml to use $app_version for ArgoCD"

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with: 
          commit-message: Update report
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          delete-branch: true
          labels: |
            argo
            dev env
            automated pr

      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"